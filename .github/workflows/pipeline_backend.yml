name: CI/CD workflow for BackEnd

on:
  push:
    branches:
      - DevOps
    paths-ignore:
      - 'frontend/**'
      - '.github/workflows/pipeline_frontend.yml'
      - '.github/workflows/keep_services_up.yml'
  pull_request:
    branches:
      - DevOps
    paths-ignore:
      - 'frontend/**'
      - '.github/workflows/pipeline_frontend.yml'
      - '.github/workflows/keep_services_up.yml'


env:
  SECRET_KEY: 'django-insecure-a6^74w0ypqs9ekp#yut_+)3higc9$48#s1e)_*4lmls7#1cxza'
  DEBUG: 0
  ALLOWED_HOSTS: 127.0.0.1 localhost host.docker.internal https://softuniada-project-backend.onrender.com
  DB_NAME: softuni_project
  DB_USER: AdminUserDB
  DB_PASSWORD: Stro0ng@Passw0rd
  DB_HOST: localhost
  DB_PORT: 5432
  CORS_ALLOWED_ORIGINS: http://localhost:3000 https://soft-vrlm.vercel.app

jobs:
  build-and-test-backend:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_USER: ${{ env.DB_USER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s

    steps:
      - name: Wait for PostgreSQL to start
        run: |
          until docker exec $(docker ps -q --filter "name=postgres") pg_isready; do
              sleep 2
          done
      - name: CheckoutCode
        uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Migrate to DB to run tests
        run: |
          python manage.py makemigrations
          python manage.py migrate
      - name: Run Tests
        run: |
          coverage run manage.py test
          coverage report --omit=tests/*

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production in Render.com
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.BACKEND_SERVICE_ID }}
          api-key: ${{ secrets.MY_RENDER_API_KEY }}
    needs: build-and-test-backend
